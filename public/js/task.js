console.log(0x9a3298afb5ac7000);var testTask={getPopup:function(t){t.preventDefault(),$("#send-candidate").css("display","block"),$("main").css("filter","blur(5px)"),$("#sidebar").css("filter","blur(5px)"),$(".close-popup").on("click",function(){$("#send-candidate").css("display","none"),$("main").css("filter","blur(0)"),$("#sidebar").css("filter","blur(0)")})},popup:function(){var t=!0;$(".select-all").find("label").on("click",function(){if(1==t){if($(".update").hasClass("update-btn")){var a=$(".update").find('input[type="checkbox"]');return t=!t,a.attr("checked",!0)}var a=$(".popup-candidate-list").find('input[type="checkbox"]');return t=!t,a.attr("checked",!0)}if($(".update").hasClass("update-btn")){var a=$(".update").find('input[type="checkbox"]');return t=!t,a.attr("checked",!1)}var a=$(".popup-candidate-list").find('input[type="checkbox"]');return t=!t,a.attr("checked",!1)})},search:function(){var t=$(".search").val();$.ajax({type:"POST",url:"/vacancy/test-tasks/list/search",headers:{"X-CSRF-TOKEN":$('meta[name="csrf-token"]').attr("content")},data:{data:t},success:function(t){$(".update-btn ul").empty();var a="";t.candidates.forEach(function(t){$(".popup-candidate-list").remove(),$(".update").addClass("update-btn"),a+='<li> <div class="popup-candidate-item"> <input type="checkbox" id='+t.last_name+"> <label for="+t.last_name+'> <span></span> <img src="/img/face.jpg" alt="Candidate names"> <div class="popup-candidate-info"> <p>'+t.first_name+" "+t.last_name+"</p></div></label></div></li>"}),$(".update ul").append(a)}})},testTask:function(t){t.preventDefault(),t.stopPropagation();var a=$(t.target).siblings(".sure-delete"),e=a.find("p");a.css("display","block");var s=$(t.target).attr("data-id");e.first().click(function(){var t=$(this).closest(".message-item");$.ajax({type:"POST",url:"/vacancy/test-tasks/delete",headers:{"X-CSRF-TOKEN":$('meta[name="csrf-token"]').attr("content")},data:{testTask:s},success:function(a){t.remove(),window.location.href="http://hrm.dev/vacancy/test-tasks/list"}})}),e.last().click(function(){$(".sure-delete").css("display","none")})},init:function(){console.log(22222222222222),$(".delete-btn").on("click",this.testTasks),$(".add-candidate-popup").on("click",this.getCandidates),$(".save-btn").on("click",this.search),$(function(){var t=$("#sortCandidate").select2({tags:!0,placeholder:"Types candidate"});t.data("select2").$container.addClass("sort_candidate"),t.data("select2").$dropdown.addClass("sort_candidate--open")})},testTasks:function(t){testTask.testTask(t)},getCandidates:function(){testTask.getPopup(event),testTask.popup()}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2suanMiXSwibmFtZXMiOlsiY29uc29sZSIsImxvZyIsInRlc3RUYXNrIiwiZ2V0UG9wdXAiLCJlIiwicHJldmVudERlZmF1bHQiLCIkIiwiY3NzIiwib24iLCJwb3B1cCIsImZsYWciLCJmaW5kIiwiaGFzQ2xhc3MiLCJhIiwiYXR0ciIsInNlYXJjaCIsImRhdGEiLCJ2YWwiLCJhamF4IiwidHlwZSIsInVybCIsImhlYWRlcnMiLCJYLUNTUkYtVE9LRU4iLCJzdWNjZXNzIiwicmVzdWx0IiwiZW1wdHkiLCJhcyIsImNhbmRpZGF0ZXMiLCJmb3JFYWNoIiwiaXRlbSIsInJlbW92ZSIsImFkZENsYXNzIiwibGFzdF9uYW1lIiwiZmlyc3RfbmFtZSIsImFwcGVuZCIsInN0b3BQcm9wYWdhdGlvbiIsInN1cmVCbG9jayIsInRhcmdldCIsInNpYmxpbmdzIiwieWVzQnV0dG9uIiwiZmlyc3QiLCJjbGljayIsInBhcmVudEJsb2NrIiwidGhpcyIsImNsb3Nlc3QiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJsYXN0IiwiaW5pdCIsInRlc3RUYXNrcyIsImdldENhbmRpZGF0ZXMiLCJzZWxlY3QyIiwidGFncyIsInBsYWNlaG9sZGVyIiwiJGNvbnRhaW5lciIsIiRkcm9wZG93biIsImV2ZW50Il0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBUUMsSUFBSSxtQkFFWixJQUFJQyxXQUVBQyxTQUFVLFNBQVVDLEdBRWhCQSxFQUFFQyxpQkFDRkMsRUFBRSxtQkFBbUJDLElBQUksVUFBVSxTQUNuQ0QsRUFBRSxRQUFRQyxJQUFJLFNBQVUsYUFDeEJELEVBQUUsWUFBWUMsSUFBSSxTQUFVLGFBRTVCRCxFQUFFLGdCQUFnQkUsR0FBRyxRQUFRLFdBRXpCRixFQUFFLG1CQUFtQkMsSUFBSSxVQUFVLFFBQ25DRCxFQUFFLFFBQVFDLElBQUksU0FBVSxXQUN4QkQsRUFBRSxZQUFZQyxJQUFJLFNBQVUsY0FLcENFLE1BQU8sV0FFSCxHQUFJQyxJQUFLLENBQ0VKLEdBQUUsZUFBZUssS0FBSyxTQUM1QkgsR0FBRyxRQUFRLFdBRVosR0FBUyxHQUFORSxFQUNILENBQ0ksR0FBR0osRUFBRSxXQUFXTSxTQUFTLGNBQ3pCLENBQ0ksR0FBSUMsR0FBSVAsRUFBRSxXQUFXSyxLQUFLLHlCQUUxQixPQURBRCxJQUFNQSxFQUNDRyxFQUFFQyxLQUFLLFdBQVcsR0FFN0IsR0FBSUQsR0FBSVAsRUFBRSx5QkFBeUJLLEtBQUsseUJBRXhDLE9BREFELElBQU1BLEVBQ0NHLEVBQUVDLEtBQUssV0FBVyxHQUl6QixHQUFHUixFQUFFLFdBQVdNLFNBQVMsY0FDekIsQ0FDSSxHQUFJQyxHQUFJUCxFQUFFLFdBQVdLLEtBQUsseUJBRTFCLE9BREFELElBQU1BLEVBQ0VHLEVBQUVDLEtBQUssV0FBVyxHQUk5QixHQUFJRCxHQUFJUCxFQUFFLHlCQUF5QkssS0FBSyx5QkFFeEMsT0FEQUQsSUFBTUEsRUFDQ0csRUFBRUMsS0FBSyxXQUFXLE1BTXJDQyxPQUFRLFdBRUosR0FBSUMsR0FBT1YsRUFBRSxXQUFXVyxLQUN4QlgsR0FBRVksTUFDRUMsS0FBTSxPQUNOQyxJQUFLLGtDQUNMQyxTQUNJQyxlQUFnQmhCLEVBQUUsMkJBQTJCUSxLQUFLLFlBRXRERSxNQUNJQSxLQUFRQSxHQUVaTyxRQUFTLFNBQVVDLEdBQ2ZsQixFQUFFLGtCQUFrQm1CLE9BQ3BCLElBQUlDLEdBQUssRUFDT0YsR0FBT0csV0FDYkMsUUFBUSxTQUFTQyxHQUN2QnZCLEVBQUUseUJBQXlCd0IsU0FDM0J4QixFQUFFLFdBQVd5QixTQUFTLGNBRXRCTCxHQUFLLHFFQUU0QkcsRUFBS0csVUFBVSxnQkFDOUJILEVBQUtHLFVBQVUseUdBSXZCSCxFQUFLSSxXQUFXLElBQUlKLEVBQUtHLFVBQVcsa0NBT2xEMUIsRUFBRSxjQUFjNEIsT0FBT1IsT0FLbkN4QixTQUFVLFNBQVNFLEdBRWZBLEVBQUVDLGlCQUNGRCxFQUFFK0IsaUJBRUYsSUFBSUMsR0FBWTlCLEVBQUVGLEVBQUVpQyxRQUFRQyxTQUFTLGdCQUNqQ0MsRUFBWUgsRUFBVXpCLEtBQUssSUFDL0J5QixHQUFVN0IsSUFBSSxVQUFXLFFBQ3pCLElBQUlMLEdBQVdJLEVBQUVGLEVBQUVpQyxRQUFRdkIsS0FBSyxVQUNoQ3lCLEdBQVVDLFFBQVFDLE1BQU0sV0FFcEIsR0FBSUMsR0FBY3BDLEVBQUVxQyxNQUFNQyxRQUFRLGdCQUNsQ3RDLEdBQUVZLE1BQ0VDLEtBQU0sT0FDTkMsSUFBSyw2QkFDTEMsU0FDSUMsZUFBZ0JoQixFQUFFLDJCQUEyQlEsS0FBSyxZQUV0REUsTUFDSWQsU0FBV0EsR0FFZnFCLFFBQVMsU0FBU1AsR0FDZDBCLEVBQVlaLFNBQ1plLE9BQU9DLFNBQVNDLEtBQU8sOENBTW5DUixFQUFVUyxPQUFPUCxNQUFNLFdBRW5CbkMsRUFBRSxnQkFBZ0JDLElBQUksVUFBVyxXQUt6QzBDLEtBQU0sV0FFRmpELFFBQVFDLElBQUksZ0JBQ1pLLEVBQUUsZUFBZUUsR0FBRyxRQUFTbUMsS0FBS08sV0FDbEM1QyxFQUFFLHdCQUF3QkUsR0FBRyxRQUFRbUMsS0FBS1EsZUFDMUM3QyxFQUFFLGFBQWFFLEdBQUcsUUFBUW1DLEtBQUs1QixRQUUvQlQsRUFBRyxXQUNDLEdBQUk4QyxHQUFVOUMsRUFBRSxrQkFBa0I4QyxTQUM5QkMsTUFBTSxFQUNOQyxZQUFhLG1CQUVqQkYsR0FBUXBDLEtBQUssV0FBV3VDLFdBQVd4QixTQUFTLGtCQUM1Q3FCLEVBQVFwQyxLQUFLLFdBQVd3QyxVQUFVekIsU0FBUywyQkFLbkRtQixVQUFXLFNBQVVPLEdBQ2pCdkQsU0FBU0EsU0FBU3VELElBR3RCTixjQUFlLFdBQ1hqRCxTQUFTQyxTQUFTc0QsT0FDbEJ2RCxTQUFTTyIsImZpbGUiOiJ0YXNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc29sZS5sb2coMTExMTExMTExMTExMTExMTExMTEpO1xuXG52YXIgdGVzdFRhc2sgPSB7XG5cbiAgICBnZXRQb3B1cDogZnVuY3Rpb24gKGUpXG4gICAge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICQoXCIjc2VuZC1jYW5kaWRhdGVcIikuY3NzKCdkaXNwbGF5JywnYmxvY2snKTtcbiAgICAgICAgJCgnbWFpbicpLmNzcygnZmlsdGVyJywgJ2JsdXIoNXB4KScpO1xuICAgICAgICAkKCcjc2lkZWJhcicpLmNzcygnZmlsdGVyJywgJ2JsdXIoNXB4KScpO1xuXG4gICAgICAgICQoXCIuY2xvc2UtcG9wdXBcIikub24oJ2NsaWNrJyxmdW5jdGlvbigpe1xuXG4gICAgICAgICAgICAkKFwiI3NlbmQtY2FuZGlkYXRlXCIpLmNzcygnZGlzcGxheScsJ25vbmUnKTtcbiAgICAgICAgICAgICQoJ21haW4nKS5jc3MoJ2ZpbHRlcicsICdibHVyKDApJyk7XG4gICAgICAgICAgICAkKCcjc2lkZWJhcicpLmNzcygnZmlsdGVyJywgJ2JsdXIoMCknKTtcblxuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgcG9wdXA6IGZ1bmN0aW9uKClcbiAgICB7XG4gICAgICAgIHZhciBmbGFnPXRydWU7XG4gICAgICAgIHZhciBpdGVtID0gJCgnLnNlbGVjdC1hbGwnKS5maW5kKFwibGFiZWxcIik7XG4gICAgICAgIGl0ZW0ub24oXCJjbGlja1wiLGZ1bmN0aW9uKClcbiAgICAgICAge1xuICAgICAgICAgICAgaWYoZmxhZz09dHJ1ZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZigkKFwiLnVwZGF0ZVwiKS5oYXNDbGFzcyhcInVwZGF0ZS1idG5cIikpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYSA9ICQoXCIudXBkYXRlXCIpLmZpbmQoJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXScpO1xuICAgICAgICAgICAgICAgICAgICBmbGFnPSFmbGFnO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYS5hdHRyKCdjaGVja2VkJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBhID0gJChcIi5wb3B1cC1jYW5kaWRhdGUtbGlzdFwiKS5maW5kKCdpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0nKTtcbiAgICAgICAgICAgICAgICBmbGFnPSFmbGFnO1xuICAgICAgICAgICAgICAgIHJldHVybiBhLmF0dHIoJ2NoZWNrZWQnLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZigkKFwiLnVwZGF0ZVwiKS5oYXNDbGFzcyhcInVwZGF0ZS1idG5cIikpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYSA9ICQoXCIudXBkYXRlXCIpLmZpbmQoJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXScpO1xuICAgICAgICAgICAgICAgICAgICBmbGFnPSFmbGFnO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gIGEuYXR0cignY2hlY2tlZCcsIGZhbHNlKTtcblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciBhID0gJChcIi5wb3B1cC1jYW5kaWRhdGUtbGlzdFwiKS5maW5kKCdpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0nKTtcbiAgICAgICAgICAgICAgICBmbGFnPSFmbGFnO1xuICAgICAgICAgICAgICAgIHJldHVybiBhLmF0dHIoJ2NoZWNrZWQnLCBmYWxzZSk7XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIHNlYXJjaDogZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgICAgdmFyIGRhdGEgPSAkKFwiLnNlYXJjaFwiKS52YWwoKTtcbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgdXJsOiBcIi92YWNhbmN5L3Rlc3QtdGFza3MvbGlzdC9zZWFyY2hcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAnWC1DU1JGLVRPS0VOJzogJCgnbWV0YVtuYW1lPVwiY3NyZi10b2tlblwiXScpLmF0dHIoJ2NvbnRlbnQnKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAnZGF0YSc6IGRhdGFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgJChcIi51cGRhdGUtYnRuIHVsXCIpLmVtcHR5KCk7XG4gICAgICAgICAgICAgICAgdmFyIGFzID0gJyc7XG4gICAgICAgICAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHJlc3VsdC5jYW5kaWRhdGVzO1xuICAgICAgICAgICAgICAgIGNhbmRpZGF0ZS5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pe1xuICAgICAgICAgICAgICAgICAgICAkKFwiLnBvcHVwLWNhbmRpZGF0ZS1saXN0XCIpLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICAkKFwiLnVwZGF0ZVwiKS5hZGRDbGFzcyhcInVwZGF0ZS1idG5cIik7XG5cbiAgICAgICAgICAgICAgICAgICAgYXMrPSAnPGxpPiAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwicG9wdXAtY2FuZGlkYXRlLWl0ZW1cIj4gJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGlkPScraXRlbS5sYXN0X25hbWUrJz4gJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPGxhYmVsIGZvcj0nK2l0ZW0ubGFzdF9uYW1lKyc+ICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuPjwvc3Bhbj4gJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPGltZyBzcmM9XCIvaW1nL2ZhY2UuanBnXCIgYWx0PVwiQ2FuZGlkYXRlIG5hbWVzXCI+ICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJwb3B1cC1jYW5kaWRhdGUtaW5mb1wiPiAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICc8cD4nK2l0ZW0uZmlyc3RfbmFtZSsnICcraXRlbS5sYXN0X25hbWUgKyc8L3A+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPC9sYWJlbD4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICc8L2xpPic7XG4gICAgICAgICAgICAgICAgfSApO1xuXG4gICAgICAgICAgICAgICAgJChcIi51cGRhdGUgdWxcIikuYXBwZW5kKGFzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIHRlc3RUYXNrOiBmdW5jdGlvbihlKVxuICAgIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICAgIHZhciBzdXJlQmxvY2sgPSAkKGUudGFyZ2V0KS5zaWJsaW5ncygnLnN1cmUtZGVsZXRlJyk7XG4gICAgICAgIHZhciB5ZXNCdXR0b24gPSBzdXJlQmxvY2suZmluZCgncCcpO1xuICAgICAgICBzdXJlQmxvY2suY3NzKCdkaXNwbGF5JywgJ2Jsb2NrJyk7XG4gICAgICAgIHZhciB0ZXN0VGFzayA9ICQoZS50YXJnZXQpLmF0dHIoJ2RhdGEtaWQnKTtcbiAgICAgICAgeWVzQnV0dG9uLmZpcnN0KCkuY2xpY2soZnVuY3Rpb24gKClcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIHBhcmVudEJsb2NrID0gJCh0aGlzKS5jbG9zZXN0KCcubWVzc2FnZS1pdGVtJyk7XG4gICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgICAgIHVybDogXCIvdmFjYW5jeS90ZXN0LXRhc2tzL2RlbGV0ZVwiLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgJ1gtQ1NSRi1UT0tFTic6ICQoJ21ldGFbbmFtZT1cImNzcmYtdG9rZW5cIl0nKS5hdHRyKCdjb250ZW50JylcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgJ3Rlc3RUYXNrJzp0ZXN0VGFza1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBwYXJlbnRCbG9jay5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBcImh0dHA6Ly9ocm0uZGV2L3ZhY2FuY3kvdGVzdC10YXNrcy9saXN0XCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfSk7XG5cbiAgICAgICAgeWVzQnV0dG9uLmxhc3QoKS5jbGljayhmdW5jdGlvbiAoKVxuICAgICAgICB7XG4gICAgICAgICAgICAkKFwiLnN1cmUtZGVsZXRlXCIpLmNzcygnZGlzcGxheScsICdub25lJyk7XG4gICAgICAgIH0pO1xuXG4gICAgfSxcblxuICAgIGluaXQ6IGZ1bmN0aW9uICgpXG4gICAge1xuICAgICAgICBjb25zb2xlLmxvZygyMjIyMjIyMjIyMjIyMik7XG4gICAgICAgICQoXCIuZGVsZXRlLWJ0blwiKS5vbignY2xpY2snLCB0aGlzLnRlc3RUYXNrcyk7XG4gICAgICAgICQoXCIuYWRkLWNhbmRpZGF0ZS1wb3B1cFwiKS5vbihcImNsaWNrXCIsdGhpcy5nZXRDYW5kaWRhdGVzKTtcbiAgICAgICAgJChcIi5zYXZlLWJ0blwiKS5vbihcImNsaWNrXCIsdGhpcy5zZWFyY2gpO1xuXG4gICAgICAgICQoIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHNlbGVjdDIgPSAkKCcjc29ydENhbmRpZGF0ZScpLnNlbGVjdDIoe1xuICAgICAgICAgICAgICAgIHRhZ3M6IHRydWUsXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICdUeXBlcyBjYW5kaWRhdGUnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHNlbGVjdDIuZGF0YSgnc2VsZWN0MicpLiRjb250YWluZXIuYWRkQ2xhc3MoJ3NvcnRfY2FuZGlkYXRlJyk7XG4gICAgICAgICAgICBzZWxlY3QyLmRhdGEoJ3NlbGVjdDInKS4kZHJvcGRvd24uYWRkQ2xhc3MoJ3NvcnRfY2FuZGlkYXRlLS1vcGVuJyk7XG4gICAgICAgIH0pO1xuXG4gICAgfSxcblxuICAgIHRlc3RUYXNrczogZnVuY3Rpb24gKGV2ZW50KXtcbiAgICAgICAgdGVzdFRhc2sudGVzdFRhc2soZXZlbnQpO1xuICAgIH0sXG5cbiAgICBnZXRDYW5kaWRhdGVzOiBmdW5jdGlvbigpe1xuICAgICAgICB0ZXN0VGFzay5nZXRQb3B1cChldmVudCk7XG4gICAgICAgIHRlc3RUYXNrLnBvcHVwKCk7XG4gICAgfVxuXG59OyJdfQ==
