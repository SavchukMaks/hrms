var WelcomeMessageManager={create:function(e){e.preventDefault(),$("#create-welcome-message").show(),$("main").css("filter","blur(5px)"),$("#sidebar").css("filter","blur(5px)"),$(".close-popup").on("click",function(){$("#create-welcome-message").hide(),$("main").css("filter","blur(0)"),$("#sidebar").css("filter","blur(0)")}),$(".save-btn").on("click",function(){var e=$("#name-message").val(),a=$("#type-vacancy").val(),t=$("#content-message").val();$.ajax({type:"POST",url:"/vacancy/welcome-messages/save",headers:{"X-CSRF-TOKEN":$('meta[name="csrf-token"]').attr("content")},data:{name:e,type:a,description:t},success:function(e){location.reload()}})})},sendCandidates:function(e){e.preventDefault(),$("#send-welcome-message").css("display","block"),$("main").css("filter","blur(5px)"),$("#sidebar").css("filter","blur(5px)"),$(".close-popup").on("click",function(){$("#send-welcome-message").hide(),$("main").css("filter","blur(0)"),$("#sidebar").css("filter","blur(0)")})},WelcomeMessage:function(e){e.preventDefault(),e.stopPropagation();var a=$(e.target).siblings(".sure-delete"),t=a.find("p");a.css("display","block");var s=$(e.target).attr("data-id");t.first().click(function(){var e=$(this).closest(".message-item");$.ajax({type:"POST",url:"/vacancy/welcome-messages",headers:{"X-CSRF-TOKEN":$('meta[name="csrf-token"]').attr("content")},data:{welcomeMessage:s},success:function(a){e.remove()}})}),t.last().click(function(){$(".sure-delete").css("display","none")})},popup:function(){var e=!0;$(".select-all").find("label").on("click",function(){if(1==e){if($(".update").hasClass("update-btn")){var a=$(".update").find('input[type="checkbox"]');return e=!e,a.attr("checked",!0)}var a=$(".popup-candidate-list").find('input[type="checkbox"]');return e=!e,a.attr("checked",!0)}if($(".update").hasClass("update-btn")){var a=$(".update").find('input[type="checkbox"]');return e=!e,a.attr("checked",!1)}var a=$(".popup-candidate-list").find('input[type="checkbox"]');return e=!e,a.attr("checked",!1)})},search:function(){$(".search-btn").on("click",function(){var e=$(".search").val();$.ajax({type:"POST",url:"/vacancy/welcome-messages/search",headers:{"X-CSRF-TOKEN":$('meta[name="csrf-token"]').attr("content")},data:{data:e},success:function(e){$(".update-btn").empty();var a="";e.candidates.forEach(function(e){$(".popup-candidate-list").remove(),$(".update").addClass("update-btn"),a+='<li> <div class="popup-candidate-item"> <input type="checkbox" id='+e.last_name+"> <label for="+e.last_name+'> <span></span> <img src="/img/face.jpg" alt="Candidate names"> <div class="popup-candidate-info"> <p>'+e.first_name+" "+e.last_name+"</p></div></label></div></li>"}),$(".update ul").append(a)}})})},clicks:function(){$(".popup-candidate-item").find("label").on("click",function(){var e=$(this).siblings("input");e.attr("checked",e.is(":checked"))})},init:function(){$("#create-new-message").on("click",this.create),$(".send-btn").on("click",this.sendCandidate),$(".delete-btn").on("click",this.WelcomeMessages),$(function(){var e=$("#sortCandidate").select2({tags:!0,placeholder:"Types vacancy"});e.data("select2").$container.addClass("sort_candidate"),e.data("select2").$dropdown.addClass("sort_candidate--open")})},WelcomeMessages:function(e){WelcomeMessageManager.WelcomeMessage(e)},sendCandidate:function(e){WelcomeMessageManager.sendCandidates(e),WelcomeMessageManager.popup(),WelcomeMessageManager.clicks(),WelcomeMessageManager.search()}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
